[{"title":"Linux账户管理审计策略和验证机制","date":"2017-02-13T06:27:57.000Z","path":"2017/02/13/3账户管理操作机制/","text":"一、Linux账号管理 二、pam用户认证机制 三、sudo命令 1）Linux账号管理 1.在linux中，用户帐号，用户密码，用户组信息和用户组密码都是存放在不同的配置文件中的。 1234/etc/passwd: 保存用户帐号和其相关信息(密码除外)。/etc/shadow: 保存用户的密码信息。/etc/group： 保存用户组的所有信息。/etc/gshadow: 保存用户组的密码信息。 在passwd文件中，一行定义一个用户帐号，每行均由多个不同的字段构成，各字段值间用”:”分隔，每个字段均代表该帐号某方面的信息。在刚安装完成的linux系统中，passwd配置文件已有很多帐号信息了，这些帐号是由系统自动创建的，他们是linux进程或部分服务程序正常工作所需要使用的账户，这些账户的最后一个字段的值一般为/sbin/nologin，表示该帐号不能用来登录linux系统12345678910111213141516171819在passwd配置文件中，从左至右各字段的对应关系及其含义：root:x:0:0:root:/root:/bin/bash第一字段：用户名（也被称为登录名）。第二字段：口令；由于passwd不再保存密码信息，所以用x占位代表。第三字段：用户id（UID）。第四字段：用户组id（GID）。第五字段：用户名全称，这是可选的，可以不设置。第六字段：用户的主目录所在位置。第七字段：用户所用shell的类型。 1234567891011121314151617181920212223242526在shadow配置文件中，从左至右各字段的对应关系及其含义：root:$6$WPaYJq7i85PSxMOi$euLreJACwh52RBY6ODfznis3GyLrd3M3kO4JBX.dbM/USA6WLYbnC66q3B3r7hqk3DFh 2PV.qWjVYKuw.TQUX/:17203:0:99999:7:::第一字段：用户名（也被称为登录名），和/etc/passwd是相同的，这样就把passwd 和shadow中用的用户记录联系在一起；这个字段是非空的；第二字段：密码（已被加密），如果是有些用户在这段是*，表示这个用户不能登录到系统；这个字段是非空的；第三字段：上次修改密码的时间；这个时间是从1970年01月01日算起到最近一次修改密码的时间间隔（天数）;第四字段：两次修改密码间隔最少的天数；如果设置为0,则禁用此功能；也就是说用户必须经过多少天才能修改其口令；第五字段：两次修改密码间隔最多的天数；这个能增强管理员管理用户口令的时效性；第六字段：提前多少天警告用户密码将过期；当用户登录系统后，系统登录程序提醒用户口令将要作废；第七字段：在密码过期之后多少天禁用此用户；第八字段：用户失效日期；此字段指定了用户作废的天数（从1970年的1月1日开始的天数），如果这个字段的值为空，帐号永久可用；第九字段：保留字段，目前为空；[注]： id为1时，采用md5进行加密；id为5时，采用SHA256进行加密；id为6时，采用SHA512进行加密； 123456789101112131415161718192021222324252627282930用户组在group配置文件中，从左至右各字段的对应关系及其含义：root:x:0:第一字段：是用户组的名称，由字母或数字构成。与/etc/passwd中的登录名一样，组名不应重复。第二字段：字段存放的是用户组加密后的密码。一般为是x，因为密码存在/etc/gshadow。第三字段：与用户标识号类似，也是一个整数，被系统内部用来标识组。第四字段：是属于这个组的所有用户的列表/b]，不同用户之间用逗号(,)分隔。这个用户组可能是用户的主组，也可能是附加组。root UID:0 超级用户帐号，几乎没有任何约束并且不考虑其他所有的登陆，保护和许可；可以进入系统访问 daemon UID:1 控制后台进程的系统帐号 bin UID:2 管理大部分命令的帐号 sys UID:3 管理许多系统文件的帐号 adm UID:4 管理某些管理文件的帐号 lp UID:71 打印服务帐号 smtp UID:0 smtp邮件者使用简单网络管理协议。SMTP是INTERNET标准协议 uucp UID:5 为UNIX-to-UNIX拷贝程序（UUCP）捆绑数据文件和目标的帐号 nuucp UID:6 使用远程系统登陆到主机传送文件的帐号 listen UID:37 网络监听帐号 nobody UID:60001 匿名帐号，当独立于root用户建立一个需求时分派NFS服务器。nobody帐号分派软件进程时不需要任何特殊的权限。 noaccess UID:60002 需通过一些应用程序而不登陆系统时，为了访问系统而为一个用户或者进程分派的帐号 nobody4 UID:65534 SunOS4.0或者4.1的匿名帐号 12345678910111213141516171819202122232425262728293031在gshadow配置文件中，从左至右各字段的对应关系及其含义：root:*::第一字段：是用户组的名称，由字母或数字构成。与/etc/group中的登录名一样。第二字段：字段存放的是用户组加密后的密码。如果开头为！表示无合法密码。第三字段：用户组管理员的所属帐号。第四字段：该用户组所属帐号。与/etc/group中的一样一个账户可以有多个用户组，当前时刻所属的用户组成为有效用户组。查询当前有效用户组：~$ groupszsp adm cdrom sudo dip plugdev lpadmin sambashare此时创建的文件的用户组就所属有效用户组zsp。更改有效用户组：~$ newgrp test~$ groupstest zsp adm cdrom sudo dip plugdev lpadmin sambashare第一个列出的就是当前有效用户组 1234567891011121314151617/etc/sudoers除了 root 之外的其他账号，若想要使用 sudo 运行属于 root 的权限命令，则root 需要先使用 visudo 去修改 /etc/sudoers ，让该账号能够使用全部或部分的 root 命令功能。root ALL=(ALL:ALL) ALL第一字段：系统的哪个账号可以使用 sudo 这个命令的意思，默认为 root 这个账号；第二字段：当这个账号由哪部主机联机到本 Linux 主机， 这个配置值可以指定客户端计算机。默认值 root 可来自任何一部网络主机第三字段：这个账号可以切换成什么身份来下达后续的命令，默认 root 可以切换成任何人；第四字段：可用该身份使用的命令。默认 root 可以切换任何身份且进行任何命令之意。ALL 是特殊的关键词，代表任何身份、主机或命令的意思 2.用户、用户组管理操作详解：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115adduser 添加用户：adduser [-u uid][-g group][-d home][-s shell]-u:直接给出userID -g:直接给出GID-d:直接将根目录建立在已存在目录 -s:定义shell添加用户 xuexiadduser xuexi[root@chusihhua ~] sudo adduser xuexi[root@chusihhua ~] passwd xuexiChanging password for user xuexi.New password: BAD PASSWORD: it is too shortBAD PASSWORD: is too simpleRetype new password: passwd: all authentication tokens updated successfully.管理文件检验用户 xuexi 的添加是否成功：[root@chusihhua ~] tail -l /etc/passwdxuexi:x:602:602::/home/xuexi:/bin/bash[root@chusihhua ~] tail -l /etc/shadowxuexi:$6$DMpXCsfO$sEgamxi08Bq5QNXBdysBw43d0jCITG5.d5GVtHPY1rhklLsj3ed9mx6ldc/2ANatnXXt5.wHwriRPj5zx0ZGq.:17204:0:99999:7:::当我们新建用户时，通过 /etc/login.defs 和 /etc/default/useradd 两文件实现新用户的基本设置。cat /etc/login.defs[root@chusihhua ~] cat /etc/login.defs Please note that the parameters in this configuration file control the behavior of the tools from the shadow-utils component. None of these tools uses the PAM mechanism, and the utilities that use PAM (such as the passwd command) should therefore be configured elsewhere. Refer to /etc/pam.d/system-auth for more information. *REQUIRED* Directory where mailboxes reside, _or_ name of file, relative to the home directory. If you _do_ define both, MAIL_DIR takes precedence. QMAIL_DIR is for QmailQMAIL_DIR MaildirMAIL_DIR /var/spool/mail 邮件默认目录存放处MAIL_FILE .mail Password aging controls: PASS_MAX_DAYS Maximum number of days a password may be used. PASS_MIN_DAYS Minimum number of days allowed between password changes. PASS_MIN_LEN Minimum acceptable password length. PASS_WARN_AGE Number of days warning given before a password expires.PASS_MAX_DAYS 99999 密码需变更时间PASS_MIN_DAYS 0 密码多久需要更改PASS_MIN_LEN 5 密码最小长度PASS_WARN_AGE 7 密码失效之前几天发送警告信息 Min/max values for automatic uid selection in useraddUID_MIN 500 默认账号起始的最小uid数UID_MAX 60000 最大的uid数 Min/max values for automatic gid selection in groupaddGID_MIN 500 默认账号起始的最小gid数GID_MAX 60000 最大的gid数 If defined, this command is run when removing a user. It should remove any at/cron/print jobs etc. owned by the user to be removed (passed as the first argument).USERDEL_CMD /usr/sbin/userdel_local If useradd should create home directories for users by default On RH systems, we do. This option is overridden with the -m flag on useradd command line.CREATE_HOME yes The permission mask is initialized to this value. If not specified, the permission mask will be initialized to 022.UMASK 077 This enables userdel to remove user groups if no members exist.USERGROUPS_ENAB yes 是否建立用户根目录 Use SHA512 to encrypt password.ENCRYPT_METHOD SHA512 cat /etc/default/useradd[root@chushihua ~] cat /etc/default/useradd useradd defaults fileGROUP=100 用户群组默认为100HOME=/home 默认用户的根目录，新建的目录INACTIVE=-1 是否启动,-1表示启动EXPIRE= 是否设定到期时间，设一个数值，那么用户到期后就不能登录了SHELL=/bin/bash 默认的shellSKEL=/etc/skel 登录目录内容CREATE_MAIL_SPOOL=yes这个文件中SKEL这个选项指定用户的根目录内容是从 /etc/skel 这个目录下复制过去。 3.usermod 禁用、启用帐号：12345678910111213141516usermod -L [用户名] 禁用帐号usermod -U [用户名] 启用帐号usermod -e YYYY-MM-DD [用户名][root@chushihua ~] cat /etc/shadow |grep xuexixuexi:$6$DMpXCsfO$sEgamxi08Bq5QNXBdysBw43d0jCITG5.d5GVtHPY1rhklLsj3ed9mx6ldc/2ANatnXXt5.wHwriRPj5zx0ZGq.:17204:0:99999:7:::[root@chushihua ~] usermod -L xuexi[root@chushihua ~] cat /etc/shadow |grep xuexixuexi:!$6$DMpXCsfO$sEgamxi08Bq5QNXBdysBw43d0jCITG5.d5GVtHPY1rhklLsj3ed9mx6ldc/2ANatnXXt5.wHwriRPj5zx0ZGq.:17204:0:99999:7:::[root@chushihua ~] usermod -U xuexi[root@chushihua ~] cat /etc/shadow |grep xuexixuexi:$6$DMpXCsfO$sEgamxi08Bq5QNXBdysBw43d0jCITG5.d5GVtHPY1rhklLsj3ed9mx6ldc/2ANatnXXt5.wHwriRPj5zx0ZGq.:17204:0:99999:7:::usermod 命令禁用和启用账号通过在 /etc/shadow 中相应用户密码位之前添加和删除 &quot;!&quot; 实现的。 4.groupadd 创建组：12345678groupadd [-g gid [-o]] [-r] [-f] group[root@chushihua ~] groupadd projectca[root@chushihua ~] cat /etc/group |grep projectproject:x:603:[root@chushihua ~] groupadd -g 1050 project1[root@chushihua ~] cat /etc/group |grep project1project1:x:1050: 5.创建用户的时候指定用户属于那个用户组：12345usersadd -g group_name user_name[root@chushihua ~] useradd -g project1 xuexi1[root@chushihua ~] cat /etc/passwd |grep xuexi1xuexi1:x:603:1050::/home/xuexi1:/bin/bash 6.更改用户的用户组：12345678usermod –g group_name user_name[root@chushihua ~] cat /etc/group |grep project1project1:x:1050:[root@chushihua ~] usermod -g project1 xuexi[root@chushihua ~] cat /etc/passwd |grep xuexixuexi:x:602:1050::/home/xuexi:/bin/bashxuexi1:x:603:1050::/home/xuexi1:/bin/bash 2）pam用户认证机制 Linux-PAM(linux可插入认证模块)是一套共享库,使本地系统管理员可以随意选择程序的认证方式. 换句话说,不用(重新编写)重新编译一个包含PAM功能的应用程序,就可以改变它使用的认证机制. 这种方式下,就算升级本地认证机制,也不用修改程序.PAM使用配置/etc/pam.d/下的文件,来管理对程序的认证方式.应用程序 调用相应的配置文件,从而调用本地的认证模块.模块放置在/lib/security下,以加载动态库的形式进，像我们使用su命令时,系统会提示你输入root用户的密码.这就是su命令通过调用PAM模块实现的.1234567PAM认证一般遵循这样的顺序:1.用户开始执行/usr/bin/passwd 输入密码2.passwd调用pam模块进行验证3.pam模块会到/etc/pam.d中找寻与程序passwd同名的配置文件4.依据/etc/pamd.passwd 内的设置，引用相关的PAM模块逐步进行验证分析5.将验证结果（成功、失败以及其他信息）回传给passwd这个程序6.passwd这支程序会根据PAM回传的结果决定下一个操作（重新输入新密码或者通过验证）。 PAM认证的构成123456789简单地介绍它包括四种常见认证类型(module type)：1、认证管理（authentication management）检验用户的身份验证，进而对该用户的密码进行认证，并负责设置用户的一些秘密信息。2、帐户管理（account management）大部分是在进行授权，检验用户是否具有正确的权限。3、密码管理（password management）主要是用来修改用户的密码。4、会话管理（session management）通常记录用户登录与注销时的信息。 pam验证控制类型1234567required 此验证成功则带有success 若失败则带有 failure 但不论成功或失败都会继续后续的验证流程。 因此有利于数据的登录日志，这也是PAM最常使用required的原因requisite 若验证失败立刻回报原程序 failure，并终止后续流程，若验证成功则带有success标志并继续后续的流程。sufficient 验证成功立刻回传success给原程序,并终止后续的验证流程；若验证失败则带有failure 标志并继续后续的验证流程。optional 显示信息，并不是用在验证方面 PAM常用的模块类表123456789101112131415161718192021222324252627282930313233343536373839下面是Linux提供的PAM模块列表（只是其中一部分），这其中包含模块文件、模块功能描述和相关配置文件，具体如下：pam_access 提供logdaemon风格登录控制 /etc/security/access.confpam_chroot 提供类似chroot命令的功能pam_cracklib 对密码的强度进行一定的检查 库文件libcrack和字典文件/usr/lib/cracklib_dictpam_deny 总是无条件地使认证失败pam_env 设置取消环境变量 /etc/security/pam_env.confpam_filter 对输入输出流进行过滤 filterspam_ftp.so 对匿名ftp用户进行认证pam_group 当用户在指定的终端上请求指定的 /etc/security/group.conf服务时赋予该用户相应的组权限pam_issue 在提示用户输入用户名之前显示 /etc/issue/etc/issue文件的内容pam_krb4 对用户密码进行Kerberos认证相应的Kerberos库文件pam_lastlog 在用户登录成功后显示关于 /var/log/lastlog用户上次登录的信息，并维护/var/log/lastlog文件。pam_limits 限制用户会话所能使用的系统资源 /etc/security/limits.confpam_listfile 根据指定的某个文件决定是否 例如/etc/ftpusers允许或禁止提供服务pam_mail 检查用户的邮箱中是否有新邮件 /var/spool/mail/xxxxpam_mkhomedir 为用户建立主目录 /etc/skel/pam_motd 显示/etc/motd文件的内容 /etc/motdpam_nologin 根据/etc/nologin文件的存在与否 /etc/nologin来决定用户认证是否成功pam_permit 总是无条件地使认证成功pam_pwdb 作为pam_unix_xxxx模块的一个替代。/etc/pwdb.conf使用Password Database通用接口进行认证。pam_radius 提供远程身份验证拨入用户服务(RADIUS)的认证pam_rhosts_auth 利用文件~/.rhosts和/etc/hosts.equiv和~/.rhosts/etc/hosts.equiv对用户进行认证。pam_rootok 检查用户是否为超级用户，如果是超级用户(uid=0)则无条件地通过认证。pam_securetty 提供标准的Unix securetty检查 /etc/securettypam_time 提供基于时间的控制，比如限制 /etc/security/time.conf用户只能在某个时间段内才能登录pam_unix 提供标准的Unix认证 /etc/passwd和/etc/shadowpam_userdb 利用Berkeley DB数据库来检查用户/密码pam_warn 利用syslog( )记录一条告警信息pam_wheel 只允许wheel组的用户有超级用户的存取权限 3）sudo命令 123456789101112131415sudo命令用来以其他身份来执行命令，预设的身份为root。在/etc/sudoers中设置了可执行sudo指令的用户。若其未经授权的用户企图使用sudo，则会发出警告的邮件给管理员。用户使用sudo时，必须先输入密码，之后有5分钟的有效期限，超过期限则必须重新输入密码。 语法 sudo(选项)(参数) 选项 -b：在后台执行指令； -h：显示帮助； -H：将HOME环境变量设为新身份的HOME环境变量； -k：结束密码的有效期限，也就是下次再执行sudo时便需要输入密码；。 -l：列出目前用户可执行与无法执行的指令； -p：改变询问密码的提示符号； -s：执行指定的shell； -u&lt;用户&gt;：以指定的用户作为新的身份。若不加上此参数，则预设以root作为新的身份； -v：延长密码有效期限5分钟； -V ：显示版本信息。 参数 指令：需要运行的指令和对应的参数。 实例 配置sudo必须通过编辑/etc/sudoers文件，而且只有超级用户才可以修改它，还必须使用visudo编辑。之所以使用visudo有两个原因，一是它能够防止两个用户同时修改它；二是它也能进行有限的语法检查。所以，即使只有你一个超级用户，你也最好用visudo来检查一下语法。 另一个问题是，很多时候，我们本来就登录了，每次使用sudo还要输入密码就显得烦琐了。我们可不可以不再输入密码呢？当然可以，我们这样修改配置文件： foobar chushihua=NOPASSWD: /bin/cat, /bin/ls [foobar@chushihua ~]$ sudo ls /rootanaconda-ks.cfg Desktop install.log install.log.syslog","tags":[]},{"title":"Linux服务启动配置文件的作用和流程","date":"2017-02-11T06:27:57.000Z","path":"2017/02/11/2linux服务启动配置文件的作用和流程/","text":"一、Centos6.4最小化安装系统服务的运行状态 二、启动服务详细介绍 三、Linux下chkconfig命令详解 四、服务的启动/关闭 ##1）Centos6.4最小化安装系统服务的运行状态获取开机启动服务，输入chkconfig –list 命令1234567891011121314151617[root@chusihhua ~]# lsauditd 0:off 1:off 2:on 3:on 4:on 5:on 6:offblk-availability 0:off 1:on 2:on 3:on 4:on 5:on 6:offcrond 0:off 1:off 2:on 3:on 4:on 5:on 6:offip6tables 0:off 1:off 2:on 3:on 4:on 5:on 6:offiptables 0:off 1:off 2:on 3:on 4:on 5:on 6:offlvm2-monitor 0:off 1:on 2:on 3:on 4:on 5:on 6:offnetconsole 0:off 1:off 2:off 3:off 4:off 5:off 6:offnetfs 0:off 1:off 2:off 3:on 4:on 5:on 6:offnetwork 0:off 1:off 2:on 3:on 4:on 5:on 6:offpostfix 0:off 1:off 2:on 3:on 4:on 5:on 6:offrdisc 0:off 1:off 2:off 3:off 4:off 5:off 6:offrestorecond 0:off 1:off 2:off 3:off 4:off 5:off 6:offrsyslog 0:off 1:off 2:on 3:on 4:on 5:on 6:offsaslauthd 0:off 1:off 2:off 3:off 4:off 5:off 6:offsshd 0:off 1:off 2:on 3:on 4:on 5:on 6:offudev-post 0:off 1:on 2:on 3:on 4:on 5:on 6:off ##2）启动服务详细介绍1234567891011121314151617181920212223242526272829303132333435363738394041421.auditd(审核守护进程)Linux审计系统中用户空间的一个组件，其负责将审计记录写入磁盘。2.blk-availability(lvm2相关)3.crond(用于周期性执行一条或多条指令)4.ip6tables(ipv6的防火墙)5.iptables(ipv4的防火墙软件)6.lvm2-monitor(lvm监视)如果使用LVM逻辑卷管理就开启7.netconsole(初始化网络控制台登陆)8.netfs(网络中的共享文件空间)用于在系统启动时自动挂载网络中的共享文件空间，如NFS，Samba等。9.network(网络) 在系统启动时激活所有网络接口10.postfix(邮件服务器)如服务器不提供邮件服务，可关闭11.rdisc(预先加载)该服务通过预先加载特定的应用程序到内存中以提供性能。如果你想程序启动更快，就开启它。12.restorecond(监控文件)用于给 SELinux 监测和重新加载正确的文件上下文（file contexts）。它不是必须的，但如果你使用 SELinux 的话强烈建议开启它。13.rsyslog(日志服务器)提供系统的登录档案记录。14.saslauthd sasl认证服务相关,可关闭 15.sshd(远程登录)ssh服务端，可提供安全的shell连接，用于远程登录16.udev-post(设备管理)udev&quot;的用途是Fedora的设备管理系统，默认情况下&quot;udev&quot;支持很多个规则，用于设备的权限和行为管理，该服务允许用于保存用户应用的规则。 可关闭的服务 blk-availability netconsole lvm2-monitor netfs rdisc postfix saslauthd restorecond 执行运行级别目录下的所有的rc启动脚本，实际上都是一些链接文件12345678910111213141516171819[root@chusihhua rc3.d]# lltotal 0lrwxrwxrwx. 1 root root 19 Feb 6 16:06 K10saslauthd -&gt; ../init.d/saslauthdlrwxrwxrwx. 1 root root 20 Feb 6 16:06 K50netconsole -&gt; ../init.d/netconsolelrwxrwxrwx. 1 root root 21 Feb 6 16:06 K87restorecond -&gt; ../init.d/restorecondlrwxrwxrwx. 1 root root 15 Feb 6 16:06 K89rdisc -&gt; ../init.d/rdisclrwxrwxrwx. 1 root root 22 Feb 6 16:07 S02lvm2-monitor -&gt; ../init.d/lvm2-monitorlrwxrwxrwx. 1 root root 19 Feb 6 16:06 S08ip6tables -&gt; ../init.d/ip6tableslrwxrwxrwx. 1 root root 18 Feb 6 16:06 S08iptables -&gt; ../init.d/iptableslrwxrwxrwx. 1 root root 17 Feb 6 16:06 S10network -&gt; ../init.d/networklrwxrwxrwx. 1 root root 16 Feb 6 16:07 S11auditd -&gt; ../init.d/auditdlrwxrwxrwx. 1 root root 17 Feb 6 16:06 S12rsyslog -&gt; ../init.d/rsysloglrwxrwxrwx. 1 root root 26 Feb 6 16:07 S25blk-availability -&gt; ../init.d/blk-availabilitylrwxrwxrwx. 1 root root 15 Feb 6 16:06 S25netfs -&gt; ../init.d/netfslrwxrwxrwx. 1 root root 19 Feb 6 16:06 S26udev-post -&gt; ../init.d/udev-postlrwxrwxrwx. 1 root root 14 Feb 6 16:07 S55sshd -&gt; ../init.d/sshdlrwxrwxrwx. 1 root root 17 Feb 6 16:06 S80postfix -&gt; ../init.d/postfixlrwxrwxrwx. 1 root root 15 Feb 6 16:06 S90crond -&gt; ../init.d/crondlrwxrwxrwx. 1 root root 11 Feb 6 16:06 S99local -&gt; ../rc.local 真正的rc启动脚本实际上都是放在/etc/rc.d/init.d/目录下。而这些rc启动脚本有着类似的用法，它们一般能接受start、stop、restart、status等参数123456789101112131415161718192021222324[root@chusihhua init.d]# lltotal 136-rwxr-xr-x. 1 root root 3378 Jun 22 2012 auditd-r-xr-xr-x. 1 root root 1340 Feb 22 2013 blk-availability-rwxr-xr-x. 1 root root 2793 Jul 19 2011 crond-rw-r--r--. 1 root root 18216 Jan 9 2013 functions-rwxr-xr-x. 1 root root 5829 Jan 9 2013 halt-rwxr-xr-x. 1 root root 9515 Feb 22 2013 ip6tables-rwxr-xr-x. 1 root root 9409 Feb 22 2013 iptables-rwxr-xr-x. 1 root root 652 Jan 9 2013 killall-r-xr-xr-x. 1 root root 2134 Feb 22 2013 lvm2-lvmetad-r-xr-xr-x. 1 root root 2665 Feb 22 2013 lvm2-monitor-rwxr-xr-x. 1 root root 2989 Jan 9 2013 netconsole-rwxr-xr-x. 1 root root 5486 Jan 9 2013 netfs-rwxr-xr-x. 1 root root 6334 Jan 9 2013 network-rwxr-xr-x. 1 root root 3852 Dec 3 2011 postfix-rwxr-xr-x. 1 root root 1559 May 20 2009 rdisc-rwxr-xr-x. 1 root root 1822 Feb 22 2013 restorecond-rwxr-xr-x. 1 root root 2011 Jan 10 2013 rsyslog-rwxr-xr-x. 1 root root 1698 Feb 22 2013 sandbox-rwxr-xr-x. 1 root root 2056 Nov 20 2012 saslauthd-rwxr-xr-x. 1 root root 647 Jan 9 2013 single-rwxr-xr-x. 1 root root 4534 Feb 22 2013 sshd-rwxr-xr-x. 1 root root 2294 Feb 22 2013 udev-post ##3）chkconfig命令详解1234567891011121314151617181920212223242526272829303132333435363738394041424344chkconfig命令主要用来更新（启动或停止）和查询系统服务的运行级信息。谨记chkconfig不是立即自动禁止或激活一个服务，它只是简单的改变了符号连接。一、chkconfig 的使用语法1、chkconfig [--add][--del][--list][系统服务] 或 chkconfig [--level &lt;levels等级代号&gt;][系统服务][on/off/reset]2、参数用法： --add 增加所指定的系统服务，让chkconfig指令得以管理它，并同时在系统启动的叙述文件内增加相关数据。 --del 删除所指定的系统服务，不再由chkconfig指令管理，并同时在系统启动的叙述文件内删除相关数据。 --level&lt;等级代号&gt; 指定读系统服务要在哪一个执行等级中开启或关毕。 等级0表示：表示关机 等级1表示：单用户模式 等级2表示：无网络连接的多用户命令行模式 等级3表示：有网络连接的多用户命令行模式 等级4表示：系统保留 等级5表示：带图形界面的多用户模式 等级6表示：重新启动 3、需要说明的是，level选项可以指定要查看的运行级而不一定是当前运行级。对于每个运行级，只能有一个启动脚本或者停止脚本。当切换运行级时，init不会重新启动已经启动的服务，也不会再次去停止已经停止的服务。4、chkconfig --list [name]：显示所有运行级系统服务的运行状态信息（on或off）。如果指定了name，那么只显示指定的服务在不同运行级的状态。5、chkconfig --add name：增加一项新的服务。chkconfig确保每个运行级有一项启动(S)或者杀死(K)入口。如有缺少，则会从缺省的init脚本自动建立。 chkconfig --del name：删除服务，并把相关符号连接从/etc/rc[0-6].d删除。 chkconfig [--level levels] name：设置某一服务在指定的运行级是被启动，停止还是重置。6、运行级文件：每个被chkconfig管理的服务需要在对应的init.d下的脚本加上两行或者更多行的注释。第一行告诉chkconfig缺省启动的运行级以及启动和停止的优先级。如果某服务缺省不在任何运行级启动，那么使用 - 代替运行级。第二行对服务进行描述，可以用\\ 跨行注释。例如，random.init包含三行：# chkconfig: 2345 20 80# description: Saves and restores system entropy pool for \\# higher quality random number generation.使用范例：chkconfig --list #列出所有的系统服务chkconfig --add httpd #增加httpd服务chkconfig --del httpd #删除httpd服务chkconfig --level 2345 httpd on #设置httpd在运行级别为2、3、4、5的情况下都是on（开启）的状态chkconfig --list #列出系统所有的服务启动情况chkconfig --list mysqld #列出mysqld服务设置情况chkconfig --level 35 mysqld on #设定mysqld在等级3和5为开机运行服务，--level 35表示操作只在等级3和5执行，on表示启动，off表示关闭chkconfig mysqld on #设定mysqld在各等级为on，“各等级”包括2、3、4、5等级7、如何增加一个服务：以mysqld 为例(1)、服务脚本必须存放在/etc/init.d/目录下；(2)、chkconfig --add mysqld #添加服务，在chkconfig工具服务列表中增加此服务，此时服务会被在/etc/rc.d/rcN.d中赋予K/S入口；(3)、chkconfig --level 35 mysqld on # 修改服务的默认启动等级。 ##4）服务的启动和关闭123456789101112131415161718二、服务的启动/关闭1、系统服务：一直在内存中，而且一直在运行，并提供服务的被称为服务；2、而服务也是一个运行的程序，则这个运行的程序则被称为daemons；3、这些服务的启动脚本一般放置在： /etc/init.d4、在CentOS中服务启动脚本放置在：/etc/rc.d/init.d而/etc/init.d这个目录为公认的目录，在centos中/etc/init.d就是一个链接档案5、/etc/sysconfig 服务初始化环境变量配置都在这个档案中。6、/var/lib 各个服务产生的数据库都在这个目录下，最简单的在这里找到 mysql 使用 vim 打开就可以看到，你建立的数据库以及系统默认产生的数据库名称都在这里面！7、启动/停止/重启服务 ： /etc/init.d/ serverName start/stop /restart/status8、启动/停止/重启服务： service serverName start/stop/restart 为什么可以这样写？9、service 是一个script 他可以分析你后面下达的参数，然后根据你的参数在到/etc/init.d 下去取得正确的服务来 stop start restart","tags":[]},{"title":"Linux系统启动流程","date":"2017-02-10T06:27:57.000Z","path":"2017/02/10/1Linux系统启动/","text":"一、运行/sbin/init 二、读取/etc/inittab文件 三、初始化系统/etc/rc.d/rc.sysinit 四、启动对应运行级别的守护进程(/etc/rc.d/rc—&gt;/etc/rc.d/rc*.d/) 五、用户自定义引导程序（/etc/rc.d/rc.local） 六、启动终端和X-Window界面 七、登录系统启动完成 ##1）运行/sbin/initinit的进程号是1，init进程是系统所有进程的起点，Linux在完成核内引导以后，就开始运行init程序。 ##2）读取/etc/inittab文件init程序接着需要读取配置文件/etc/inittab。inittab是一个不可执行的文本文件，它有若干指令所组成。 在Rethat系统中，inittab内容如下所示：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273[root@localhost etc]# vi inittab ## inittab This file describes how the INIT process should set up# the system in a certain run-level.## Author: Miquel van Smoorenburg, &lt;miquels@drinkel.nl.mugnet.org&gt;## inittab This file describes how the INIT process should set up# the system in a certain run-level.## Author: Miquel van Smoorenburg, &lt;miquels@drinkel.nl.mugnet.org&gt;# Modified for RHS Linux by Marc Ewing and Donnie Barnes## Default runlevel. The runlevels used by RHS are:# 0 - halt (Do NOT set initdefault to this)# 1 - Single user mode# 2 - Multiuser, without NFS (The same as 3, if you do not have networking)# 3 - Full multiuser mode# 4 - unused# 5 - X11# 6 - reboot (Do NOT set initdefault to this)#id:5:initdefault:# System initialization.si::sysinit:/etc/rc.d/rc.sysinitl0:0:wait:/etc/rc.d/rc 0l1:1:wait:/etc/rc.d/rc 1l2:2:wait:/etc/rc.d/rc 2l3:3:wait:/etc/rc.d/rc 3l4:4:wait:/etc/rc.d/rc 4l5:5:wait:/etc/rc.d/rc 5l6:6:wait:/etc/rc.d/rc 6# Trap CTRL-ALT-DELETEca::ctrlaltdel:/sbin/shutdown -t3 -r now# When our UPS tells us power has failed, assume we have a few minutesl0:0:wait:/etc/rc.d/rc 0l1:1:wait:/etc/rc.d/rc 1l2:2:wait:/etc/rc.d/rc 2l3:3:wait:/etc/rc.d/rc 3l4:4:wait:/etc/rc.d/rc 4l5:5:wait:/etc/rc.d/rc 5l6:6:wait:/etc/rc.d/rc 6# Trap CTRL-ALT-DELETEca::ctrlaltdel:/sbin/shutdown -t3 -r now# When our UPS tells us power has failed, assume we have a few minutes# of power left. Schedule a shutdown for 2 minutes from now.# This does, of course, assume you have powerd installed and your# UPS connected and working correctly.pf::powerfail:/sbin/shutdown -f -h +2 &quot;Power Failure; System Shutting Down&quot;# If power was restored before the shutdown kicked in, cancel it.pr:12345:powerokwait:/sbin/shutdown -c &quot;Power Restored; Shutdown Cancelled&quot;# Run gettys in standard runlevels1:2345:respawn:/sbin/mingetty tty12:2345:respawn:/sbin/mingetty tty23:2345:respawn:/sbin/mingetty tty34:2345:respawn:/sbin/mingetty tty45:2345:respawn:/sbin/mingetty tty56:2345:respawn:/sbin/mingetty tty6# Run xdm in runlevel 5x:5:respawn:/etc/X11/prefdm -nodaemon Runlevel 0 系统停机状态，系统默认运行级别不能设为0，否则不能正常启动（关机） Runlevel 1 单用户工作状态，root权限，用于系统维护，禁止远程登陆 Runlevel 2 多用户状态(没有NFS) Runlevel 3 完全的多用户状态(有NFS)，登陆后进入控制台命令行模式（服务器默认模式） Runlevel 4 系统未使用，保留 Runlevel 5 X11控制台，登陆后进入图形GUI模式 Runlevel 6 系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动（重启） ##3）初始化系统/etc/rc.d/rc.sysinit开始启动运行等级的服务前，检测与初始化系统环境，在/etc/inittab文件中有写。 它是一个bash shell脚本，是每一个运行级别都要首先运行的重要脚本。 它主要完成的工作有：激活交换分区，检查磁盘，加载硬件模块以及其它一些需要优先执行任务。 （1）获取网络环境与主机类型。首先会读取网络环境设置文件”/etc/sysconfig/network”，获取主机名称与默认网关等网络环境。 （2）测试与载入内存设备/proc及usb设备/sys。除了/proc外，系统会主动检测是否有usb设备，并主动加载usb驱动，尝试载入usb文件系统。 （3）决定是否启动SELinux。 （4）接口设备的检测与即插即用（pnp）参数的测试。 （5）用户自定义模块的加载。用户可以再”/etc/sysconfig/modules/*.modules”加入自定义的模块，此时会加载到系统中。 （6）加载核心的相关设置。按”/etc/sysctl.conf”这个文件的设置值配置功能。 （7）设置系统时间（clock）。 （8）设置终端的控制台的字形。 （9）设置raid及LVM等硬盘功能。 （10）以方式查看检验磁盘文件系统。 （11）进行磁盘配额quota的转换。 （12）重新以读取模式载入系统磁盘。 （13）启动quota功能。 （14）启动系统随机数设备（产生随机数功能）。 （15）清除启动过程中的临时文件。 （16）将启动信息加载到”/var/log/dmesg”文件中。 ##4）启动对应运行级别的守护进程(/etc/rc.d/rc—&gt;/etc/rc.d/rc*.d/)在rc.sysinit执行后，将返回init继续其它的动作，通常接下来会执行到/etc/rc.d/rc程序。以运行级别3为例，init将执行配置文件inittab中的以下这行：1l5:5:wait:/etc/rc.d/rc 5 这一行表示以5为参数运行/etc/rc.d/rc，/etc/rc.d/rc是一个Shell脚本，它接受5作为参数，去执行/etc/rc.d /rc5.d/目录下的所有的rc启动脚本，/etc/rc.d/rc5.d/目录中的这些启动脚本实际上都是一些链接文件，而不是真正的rc启动脚本，真正的rc启动脚本实际上都是放在/etc/rc.d/init.d/目录下。而这些rc启动脚本有着类似的用法，它们一般能接受start、stop、 restart、status等参数。 /etc/rc.d/rc5.d/中的rc启动脚本通常是K或S开头的链接文件，对于以以S开头的启动脚本，将以start参数来运行。而如果发现存在相应的脚本也存在K打头的链接，而且已经处于运行态了(以/var/lock/subsys/下的文件作为标志)，则将首先以stop为参数停止这些已经启动了的守护进程，然后再重新运行。这样做是为了保证是当init改变运行级别时，所有相关的守护进程都将重启。12345678910111213141516171819202122232425262728[root@localhost rc0.d]# ls -al S01halt lrwxrwxrwx 1 root root 14 Jun 17 2016 S01halt -&gt; ../init.d/halt[root@localhost rc0.d]# runlevelN 5[root@localhost rc0.d]# vi /etc/rc.d/rc.sysinit [root@localhost rc0.d]# lsK01dnsmasq K20nfs K74haldaemon K89dundK01smartd K20rwhod K74lvm2-monitor K89hiddK02avahi-daemon K24irda K74nscd K89iscsiK02avahi-dnsconfd K25phpstudy K74ntpd K89iscsidK02NetworkManager K25squid K74rsyslog K89netplugdK02oddjobd K25sshd K75netfs K89pandK03yum-updatesd K30sendmail K85mdmonitor K89rdiscK05anacron K30spamassassin K85mdmpd K90bluetoothK05atd K35smb K85messagebus K90networkK05conman K35vncserver K85rpcgssd K91capiK05innd K35winbind K85rpcidmapd K91isdnK05jexec K44rawdevices K86nfslock K92ip6tablesK05saslauthd K50netconsole K87irqbalance K92iptablesK05wdaemon K50tux K87mcstrans K95firstbootK10cups K50vsftpd K87multipathd K95kudzuK10dc_server K50xinetd K87named K99cpuspeedK10hplip K60crond K87portmap K99microcode_ctlK10psacct K69rpcsvcgssd K87restorecond K99readahead_earlyK10tcsd K72autofs K88auditd K99readahead_laterK10xfs K73ipmi K88pcscd S00killallK12dc_client K73ypbind K88syslog S01haltK15gpm K74acpid K88wpa_supplicant 至于在每个运行级中将运行哪些守护进程，用户可以通过chkconfig或setup中的”System Services”来自行设定。 如何增加一个服务： 1.服务脚本必须存放在/etc/ini.d/目录下； 2.chkconfig –add servicename 在chkconfig工具服务列表中增加此服务，此时服务会被在/etc/rc.d/rcN.d中赋予K/S入口了； 3.chkconfig –level 345 mysqld on 修改服务的默认启动等级。 其他使用范例： chkconfig –list #列出所有的系统服务 chkconfig –del httpd #删除httpd服务 chkconfig –list mysqld #列出mysqld服务设置情况 chkconfig –level 35 mysqld on #设定mysqld在等级3和5为开机运行服务，–level 35表示操作只在等级3和5执行，on表示启动，off表示关闭 chkconfig mysqld on #设定mysqld在各等级为on，“各等级”包括2、3、4、5等级 常见的守护进程有： amd：自动安装NFS守护进程 apmd:高级电源管理守护进程 arpwatch：记录日志并构建一个在LAN接口上看到的以太网地址和IP地址对数据库 autofs：自动安装管理进程automount，与NFS相关，依赖于NIS crond：Linux下的计划任务的守护进程 named：DNS服务器 netfs：安装NFS、Samba和NetWare网络文件系统 network：激活已配置网络接口的脚本程序 nfs：打开NFS服务 portmap：RPC portmap管理器，它管理基于RPC服务的连接 sendmail：邮件服务器sendmail smb：Samba文件共享/打印服务 syslog：一个让系统引导时起动syslog和klogd系统日志守候进程的脚本 xfs：X Window字型服务器，为本地和远程X服务器提供字型集 Xinetd：支持多种网络服务的核心守护进程，可以管理w\u000ftp、sshd、telnet等服务 这些守护进程也启动完成了，rc程序也就执行完了，然后又将返回init继续下一步。 ##5）用户自定义引导程序（/etc/rc.d/rc.local）一般来说，自定义的程序不需要执行上面所说的繁琐的建立shell增加链接文件的步骤，只需要将命令放在rc.local里面就可以了，这个shell脚本就是保留给用户自定义启动内容的。 ##6）启动终端和X-Window界面rc执行完毕后，返回init。这时基本系统环境已经设置好了，各种守护进程也已经启动了。init接下来会打开6个终端，以便用户登录系统。通过按Alt+Fn(n对应1-6)可以在这6个终端中切换。在inittab中的以下6行就是定义了6个终端： 1:2345:respawn:/sbin/mingetty tty1 2:2345:respawn:/sbin/mingetty tty2 3:2345:respawn:/sbin/mingetty tty3 4:2345:respawn:/sbin/mingetty tty4 5:2345:respawn:/sbin/mingetty tty5 6:2345:respawn:/sbin/mingetty tty6 从上面可以看出在2、3、4、5的运行级别中都将以respawn方式运行mingetty程序，mingetty程序能打开终端、设置模式。同时它会显示一个文本登录界面，这个界面就是我们经常看到的登录界面，在这个登录界面中会提示用户输入用户名，而用户输入的用户将作为参数传给login程序来验 证用户的身份。 除了这6个之外还会执行”/etc/X11/prefdm -nodaemon”，这个主要启动X-Window，显示一个文本登录界面，这个界面就是我们经常看到的登录界面，在这个登录界面中会提示用户输入用户名，而用户输入的用户将作为参数传给login程序来验 证用户的身份。 ##7）登录系统启动完成Runlevel 为5的图形方式用户登录，通过图形化的登录界面输入用户名和密码登录。登录后可以直接进入KDE、Gnome等窗口管理器。 文本方式登录： 当我们看到mingetty的登录界面时，我们就可以输入用户名和密码来登录系统了。 Linux的账号验证程序是login，login接受mingetty传来的用户名作为用户名参数。然后login会对用户名进行分析：如果用户名 不是root，且存在/etc/nologin文件，login将输出nologin文件的内容，然后退出。这通常用来系统维护时防止非root用户登 录。只有/etc/securetty中登记了的终端才允许root用户登录，如果不存在这个文件，则root可以在任何终端上登录。/etc/usertty文件用于对用户作出附加访问限制，如果不存在这个文件，则没有其他限制。 在分析完用户名后，login将搜索/etc/passwd以及/etc/shadow来验证密码以及设置账户的其它信息，比如：主目录是什么、使用何种shell。如果没有指定主目录，将默认为根目录；如果没有指定shell，将默认为/bin/bash。 login程序登录成功后，会向对应的终端再输出最近一次登录的信息（在/var/log/lastlog中有记录），并检查用户是否有新邮件(在/usr/spool/mail/的对应用户名目录下)。然后开始设置各种环境变量：对于bash来说，系统首先寻找/etc/profile脚本文件，并执行它；然后如果用户的主目录中存在.bash_profile文件，就执行它，在这些文件中又可能调用了其它配置文件，所有的配置文件执行后后，各种环境变量也设好了，这时会出现大家熟悉的命令行提示符，到此整个启动过程就结束了。","tags":[]}]